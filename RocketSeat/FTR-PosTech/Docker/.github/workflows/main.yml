name: widget-server pipe

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure node
        id: configure-node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure pnpm
        id: configure-pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        id: install-dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Configure AWS credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx (cache)
        id: setup-docker-buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image tag
        id: generate-image-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Build and export image to scan
        id: build-push-image-scan
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:scan

      - name: Run Trivy vulnerability scan
        id: trivy-vulnerability-scan
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:scan
          format: "table"
          scan-type: "image"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH,MEDIUM,LOW"
          exit-code: "1"

      # Maneira manual
      # - name: Build and push image to AWS ECR
      #   id: build-push-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry-id }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
      #     ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      #     IMAGE_TAG: ${{ steps.generate-image-tag.outputs.sha }}
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Maneira com action
      - name: Build and push image to AWS ECR
        id: build-push-image
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.generate-image-tag.outputs.sha }}
          push: true

      - run: npm ci
      - run: npm run test
      - run: npm run build
      - run: npm run start
